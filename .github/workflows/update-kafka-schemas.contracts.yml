name: Upload Schemas

permissions:
  contents: write
  packages: read

on:
  workflow_run:
    workflows: ["Publish ECK1.Contracts"] 
    types:
      - completed
  push:
    branches: [ "main" ]
    paths:
      - '.github/workflows/update-kafka-schemas.contracts.yml'
      - '.github/workflows/actions/run-generator/action.yml'
      - '.github/workflows/actions/download-secrets/action.yml'
      - '.github/workflows/actions/run-generator/schema-gen-job-params.json'
      - '.github/scripts/update-sln.ps1'
      - '.github/scripts/update-kafka-schema.ps1'

jobs:
  generate-schemas:
    if: ${{ github.event_name == 'push' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    env:
      SCHEMA_ROOT: _SolutionItems/SchemaRegistry
      SOLUTION_DIR: src
      SCHEMA_BACKUP_PATH: /tmp/evolve-schema/schema-backup

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download secrets
        uses: ./.github/workflows/actions/download-secrets
        with:
          doppler-token: ${{ secrets.DOPPLER_TOKEN }}
          project: eck1-global
          config: dev

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"
      
      - name: Configure NuGet
        run: |
          mkdir -p ~/.nuget/NuGet
          cat > ~/.nuget/NuGet/NuGet.Config <<EOF
          <configuration>
            <packageSources>
              <add key="GitHub" value="https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" />
              <add key="nuget.org" value="https://api.nuget.org/v3/index.json" />
            </packageSources>
            <packageSourceMapping>
              <packageSource key="GitHub">
                <package pattern="ECK1.*" />
              </packageSource>
              <packageSource key="nuget.org">
                <package pattern="*" />
              </packageSource>
            </packageSourceMapping>
            <packageSourceCredentials>
              <GitHub>
                <add key="Username" value="${{ github.actor }}" />
                <add key="ClearTextPassword" value="${{ secrets.GITHUB_TOKEN }}" />
              </GitHub>
            </packageSourceCredentials>
          </configuration>
          EOF

      - name: Download latest NuGet package
        id: get-assembly-path
        shell: bash
        run: |
          curl -L -o /tmp/ECK1.Contracts.nupkg "https://nuget.pkg.github.com/OWNER/api/v3/package/ECK1.Contracts/0.1.0"
          unzip /tmp/ECK1.Contracts.nupkg -d /tmp/ECK1.Contracts

          DLL_PATH=$(find /tmp/ECK1.Contracts -type f -name "ECK1.Contracts.dll" | sort -r | head -n 1)
          echo "Found DLL at $DLL_PATH"

          echo "ASSEMBLY_PATH=$DLL_PATH" >> $GITHUB_ENV

      - name: Move current schemas
        run: |
          mkdir -p ${{ env.SCHEMA_BACKUP_PATH }}
          if [ -d "${{ env.SOLUTION_DIR }}/${{ env.SCHEMA_ROOT }}" ]; then
            mv ${{ env.SOLUTION_DIR }}/${{ env.SCHEMA_ROOT }}/* ${{ env.SCHEMA_BACKUP_PATH }}/
          fi

      - name: Run generator
        uses: ./.github/workflows/actions/run-generator
        with:
          assembly-path: ${{ env.ASSEMBLY_PATH }}
          solution-dir: ${{ env.SOLUTION_DIR }}
          solution-file: ECK1.sln
          schema-root: ${{ env.SCHEMA_ROOT }}
          schema-backup-path: ${{ env.SCHEMA_BACKUP_PATH }}

      - name: Commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git diff --staged --quiet || git commit -m "Update kafka schemas"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run schema update
        shell: pwsh
        run: |
          ./.github/scripts/update-kafka-schema.ps1 -SchemaDir "${{ env.SOLUTION_DIR }}/${{ env.SCHEMA_ROOT }}"